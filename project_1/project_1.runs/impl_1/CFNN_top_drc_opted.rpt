Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2021.1 (win64) Build 3247384 Thu Jun 10 19:36:33 MDT 2021
| Date         : Mon Oct 31 18:10:32 2022
| Host         : DESKTOP-7O83OJ9 running 64-bit major release  (build 9200)
| Command      : report_drc -file CFNN_top_drc_opted.rpt -pb CFNN_top_drc_opted.pb -rpx CFNN_top_drc_opted.rpx
| Design       : CFNN_top
| Device       : xc7z020clg484-1
| Speed File   : -1
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 68
+---------+------------------+-------------------------------------------------------------------+------------+
| Rule    | Severity         | Description                                                       | Violations |
+---------+------------------+-------------------------------------------------------------------+------------+
| NSTD-1  | Critical Warning | Unspecified I/O Standard                                          | 1          |
| UCIO-1  | Critical Warning | Unconstrained Logical Port                                        | 1          |
| DPIP-1  | Warning          | Input pipelining                                                  | 14         |
| DPOP-1  | Warning          | PREG Output pipelining                                            | 6          |
| DPOP-2  | Warning          | MREG Output pipelining                                            | 38         |
| IOCNT-1 | Warning          | Number of IOs                                                     | 1          |
| ZPS7-1  | Warning          | PS7 block required                                                | 1          |
| AVAL-4  | Advisory         | enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND | 6          |
+---------+------------------+-------------------------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
NSTD-1#1 Critical Warning
Unspecified I/O Standard  
295 out of 295 logical ports use I/O standard (IOSTANDARD) value 'DEFAULT', instead of a user assigned specific value. This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all I/O standards. This design will fail to generate a bitstream unless all logical ports have a user specified I/O standard value defined. To allow bitstream creation with unspecified I/O standard values (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks NSTD-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. Problem ports: result[15:0], test_bn_input_pixel[15:0], test_bn_input_pixel_addr[2:0],
test_bn_output_filter[3:0], test_bn_output_pixel_addr[2:0],
test_conv_output_filter[4:0], test_conv_output_pixel_addr[2:0],
test_df_input_pixel_addr[3:0], test_fc_output_pixel_addr[4:0],
test_fr_input_pixel_addr[4:0], test_fr_output_pixel[15:0],
test_fr_output_pixel_addr[3:0], test_mp_input_filter[4:0],
test_mp_input_pixel[15:0], test_mp_input_pixel_addr[2:0]
 (the first 15 of 57 listed).
Related violations: <none>

UCIO-1#1 Critical Warning
Unconstrained Logical Port  
295 out of 295 logical ports have no user assigned specific location constraint (LOC). This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all pin locations. This design will fail to generate a bitstream unless all logical ports have a user specified site LOC constraint defined.  To allow bitstream creation with unspecified pin locations (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks UCIO-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run.  Problem ports: result[15:0], test_bn_input_pixel[15:0], test_bn_input_pixel_addr[2:0],
test_bn_output_filter[3:0], test_bn_output_pixel_addr[2:0],
test_conv_output_filter[4:0], test_conv_output_pixel_addr[2:0],
test_df_input_pixel_addr[3:0], test_fc_output_pixel_addr[4:0],
test_fr_input_pixel_addr[4:0], test_fr_output_pixel[15:0],
test_fr_output_pixel_addr[3:0], test_mp_input_filter[4:0],
test_mp_input_pixel[15:0], test_mp_input_pixel_addr[2:0]
 (the first 15 of 57 listed).
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_0/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_convolutional_top/u_conv_processing_element/u_conv_mult_0/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_0/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_convolutional_top/u_conv_processing_element/u_conv_mult_0/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_1/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_convolutional_top/u_conv_processing_element/u_conv_mult_1/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_1/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_convolutional_top/u_conv_processing_element/u_conv_mult_1/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_2/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_convolutional_top/u_conv_processing_element/u_conv_mult_2/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_2/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_convolutional_top/u_conv_processing_element/u_conv_mult_2/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP u_defuzzy_top/u_df_processing_element/u_df_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_defuzzy_top/u_df_processing_element/u_df_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP u_defuzzy_top/u_df_processing_element/u_df_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_defuzzy_top/u_df_processing_element/u_df_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive input u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive output u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_0/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive output u_convolutional_top/u_conv_processing_element/u_conv_mult_0/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_1/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive output u_convolutional_top/u_conv_processing_element/u_conv_mult_1/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_2/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive output u_convolutional_top/u_conv_processing_element/u_conv_mult_2/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP u_defuzzy_top/u_df_processing_element/u_df_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive output u_defuzzy_top/u_df_processing_element/u_df_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive output u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive multiplier stage u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_0/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive multiplier stage u_convolutional_top/u_conv_processing_element/u_conv_mult_0/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_1/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive multiplier stage u_convolutional_top/u_conv_processing_element/u_conv_mult_1/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP u_convolutional_top/u_conv_processing_element/u_conv_mult_2/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive multiplier stage u_convolutional_top/u_conv_processing_element/u_conv_mult_2/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP u_defuzzy_top/u_df_processing_element/u_df_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive multiplier stage u_defuzzy_top/u_df_processing_element/u_df_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive multiplier stage u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[0] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[0]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[10] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[10]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[11] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[11]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[12] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[12]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[13] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[13]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[14] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[14]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[15] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[15]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[16] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[16]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[17] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[17]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[18] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[18]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[19] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[19]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[1] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[1]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[20] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[20]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[21] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[21]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[22] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[22]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[23] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[23]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[24] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[24]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[25] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[25]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[26] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[26]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[27] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[27]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[28] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[28]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[29] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[29]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[2] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[2]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[30] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[30]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[31] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[31]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[3] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[3]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[4] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[4]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#34 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[5] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[5]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#35 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[6] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[6]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#36 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[7] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[7]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#37 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[8] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[8]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#38 Warning
MREG Output pipelining  
DSP u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[9] multiplier stage u_fuzzy_rule_top/u_fr_processing_element/mult1_reg[9]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

IOCNT-1#1 Warning
Number of IOs  
The design contains 295 unplaced I/O ports while the target device, xc7z020clg484-1, has 200 remaining available user I/O pins. This DRC assumes that all ports which do not drive MGT pins should be placed on user I/O pins. To correct this issue:
1. Ensure you are targeting the correct device and package. Select a larger device or different package if necessary.
2. Check the top-level ports of the design to ensure the correct number of ports are specified.
3. Consider design changes to reduce the number of user I/O pins needed.

Related violations: <none>

ZPS7-1#1 Warning
PS7 block required  
The PS7 cell must be used in this Zynq design in order to enable correct default configuration.
Related violations: <none>

AVAL-4#1 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
u_batch_normalization_top/u_bn_processing_element/u_bn_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#2 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
u_convolutional_top/u_conv_processing_element/u_conv_mult_0/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#3 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
u_convolutional_top/u_conv_processing_element/u_conv_mult_1/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#4 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
u_convolutional_top/u_conv_processing_element/u_conv_mult_2/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#5 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
u_defuzzy_top/u_df_processing_element/u_df_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#6 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
u_fully_connected_top/u_fc_processing_element/u_fc_mult/U0/i_synth/i_synth_option.i_synth_model/opt_7series.i_uniwrap/i_primitive: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>


